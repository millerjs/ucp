#!/bin/bash

G="\033[1;32m"
R="\033[0;31m"
N="\033[0m"

mkdir data 
##### Generate files
# echo "Generating random test files"
# for i in `seq 10 -1 1`
# do
#     printf "\r\tGenerating test file [data/ucp_test$i.dat] ... "
#     dd if=/dev/urandom of=data/ucp_test$i.dat bs=1M count=$i 2> /dev/null
# done
# echo ""

# mkdir data/recurse
# for i in `seq 10 -1 1`
# do
#     printf "\r\tGenerating test file [data/recurse/ucp_test$i.dat] ... "
#     dd if=/dev/urandom of=data/recurse/ucp_test$i.dat bs=1M count=$i 2> /dev/null
# done

clear
echo ""

for k in `seq 0 100`
do
    echo -e "$G""Test round #$k$N"

##### Transfer files
    cmd="ucp data jsmiller@localhost:/tmp/ucp_test"
    echo -e $cmd
    $cmd

##### Validate transfer
    echo -e "Validating transfer ... \n"
    for i in `seq 10 -1 1`
    do
        printf "\r\tTesting [ucp_test$i.dat] \t\t"
        diff data/ucp_test$i.dat           \
            /tmp/ucp_test/ucp_test$i.dat   \
            > /dev/null
        stat=$?
        if [ $stat -ne 0 ]; then
            printf "[$R FAILED $N]"
            exit
        else
            printf "[$G PASSED $N]"
        fi
    done

    for i in `seq 10 -1 1`
    do
        printf "\r\tTesting[$i] [recurse/ucp_test$i.dat] \t"
        diff data/recurse/ucp_test$i.dat           \
            /tmp/ucp_test/recurse/ucp_test$i.dat   \
            > /dev/null
        stat=$?
        if [ $stat -ne 0 ]; then
            printf "[$R FAILED $N]"
            exit
        else
            printf "[$G PASSED $N]"
        fi
    done

    rm -r /tmp/ucp_test

    printf "[$G ALL $N]"
    
    tput cup 0 0
    # clear
    echo -e "$G""Previous round #$k passed all tests$N"
    
done


##### Cleaning test files
# echo -e "\nCleaning test files ..."
# echo -e "\trm -rf /tmp/ucp_tests"
# rm -r /tmp/ucp_tests
# echo -e "\trm -rf data"
# rm -r data

