#!/bin/bash

N_TESTS=1000

G="\033[1;32m"
R="\033[0;31m"
N="\033[0m"

mkdir data 
##### Generate files
echo "Generating random test files"
for i in `seq 10 -1 1`
do
    printf "\r\tGenerating test file [data/ucp_test$i.dat] ... "
    dd if=/dev/urandom of=data/ucp_test$i.dat bs=1M count=$i 2> /dev/null
done
echo ""

mkdir data/recurse
for i in `seq 10 -1 1`
do
    printf "\r\tGenerating test file [data/recurse/ucp_test$i.dat] ... "
    dd if=/dev/urandom of=data/recurse/ucp_test$i.dat bs=1M count=$i 2> /dev/null
done

clear
echo ""

nfiles=10

run_test(){
##### Transfer files
    cmd=$@
    echo -e $cmd
    $cmd

##### Validate transfer
    echo -e "$G""Validating test #$k files ... \n""$N"
    for i in `seq $nfiles -1 1`
    do
        printf "\r\tTesting [ucp_test$i.dat] \t\t"
        diff data/ucp_test$i.dat           \
	    /tmp/ucp_test/ucp_test$i.dat   \
	    > /dev/null
        stat=$?
        if [ $stat -ne 0 ]; then
	    printf "\n\n\tTest[$i] [recurse/ucp_test$i.dat] \t[$R FAILED $N]"
	    exit
        else
	    printf "[$G PASSED $N]"
        fi
    done

    for i in `seq $nfiles -1 1`
    do
        printf "\r\tTesting[$i] [recurse/ucp_test$i.dat] \t"
        diff data/recurse/ucp_test$i.dat           \
	    /tmp/ucp_test/recurse/ucp_test$i.dat   \
	    > /dev/null
        stat=$?
        if [ $stat -ne 0 ]; then
	    printf "\n\n\tTest[$i] [recurse/ucp_test$i.dat] \t[$R FAILED $N]"
	    exit
        else
	    printf "[$G PASSED $N]"
        fi
    done

    rm -r /tmp/ucp_test
    
    tput cup 0 0
    # clear
    echo -e "$G""Previous round #$k passed all tests$N"
    
}

for k in `seq 0 $N_TESTS`
do
    echo -e "$G""Test round #$k$N"
    
    # LOCAL TO REMOTE
    run_test "parcel data `whoami`@localhost:/tmp/ucp_test"

    # REMOTE TO LOCAL
    run_test "parcel `whoami`@localhost:`pwd`/data /tmp/ucp_test"
done


# ##### Cleaning test files
echo -e "\nCleaning test files ..."
echo -e "\trm -rf /tmp/ucp_tests"
rm -r /tmp/ucp_tests
echo -e "\trm -rf data"
rm -r data

